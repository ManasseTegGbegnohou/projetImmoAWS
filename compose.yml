services:
  frontend:
    image: manacccc/projet-immo-fe:${FRONTEND_VERSION:-latest}
    container_name: projetimmo-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - immo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`projetImmo.${MY_DOMAIN}`)"
      - "traefik.http.routers.frontend.entryPoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    image: manacccc/projet-immo-be:${BACKEND_VERSION:-latest}
    container_name: projetimmo-backend
    restart: unless-stopped
    networks:
      - immo-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/bdimmo
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=dbpassword
      - SERVER_PORT=${API_PORT}
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.mariadb.jdbc.Driver
    depends_on:
      mariadb:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`projetImmo-backend.${MY_DOMAIN}`)"
      - "traefik.http.routers.backend.entryPoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=8888"

  mariadb:
    image: manacccc/projet-immo-bd:${MARIADB_VERSION:-latest}
    container_name: maria-db
    restart: unless-stopped
    networks:
      - immo-network
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3

  proxy:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    networks:
      - immo-network
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
    volumes:
      - "../data/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)"
      - "traefik.http.routers.api.entryPoints=websecure"
      - "traefik.http.routers.api.service=api@internal"
    ports:
      - "443:443"
      - "80:80"
    environment:
      - "DUCKDNS_TOKEN=${DUCKDNS_TOKEN}"

volumes:
  db:

networks:
  immo-network:
    driver: bridge
